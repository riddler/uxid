# AUTOGENERATED FILE - DO NOT EDIT

defmodule UXID.Spec0101Test do
  use ExUnit.Case, async: true
  @moduledoc """
  UXID Spec 0101 - basic decoding

  Decoding valid and invalid input strings. This spec is a great introduction to UXIDs. The structure is defined and visible without needing to know how it is generated. Implementors should start here.

  """

  @moduletag specgroup: "01"
  @moduletag spec: "0101"


  describe "basic decoding: api" do

  end

  describe "basic decoding: decoder" do

    test "accepts a ULID" do
      input_string = "01E9VB3RWNAR89HSKMS84K9HCS"
      result = UXID.Decoder.process(input_string)

      assert {:ok, %UXID{} = uxid} = result


      assert 1591129269141 == uxid.time


    end

    test "accepts the maximum allowed timestamp" do
      input_string = "7ZZZZZZZZZZZZZZZZZZZZZZZZZ"
      result = UXID.Decoder.process(input_string)

      assert {:ok, %UXID{} = uxid} = result


      assert 281474976710655 == uxid.time


    end

    test "rejects malformed strings" do
      input_string = "this is not a UXID"
      result = UXID.Decoder.process(input_string)

      assert {:error, message} = result
      assert "expected input to be a Base32 encoded string, got: 'this is not a UXID'" == message

    end

  end
end
