# AUTOGENERATED FILE - DO NOT EDIT

require "test_helper"

class UXID0101Test < Minitest::Test
  # UXID Spec 0101 - basic decoding
  # Decoding valid and invalid input strings. This spec is a great introduction to UXIDs. The structure is defined and visible without needing to know how it is generated. Implementors should start here.








  # accepts a ULID
  def test_accepts_a_ulid
    input_string = "01E9VB3RWNAR89HSKMS84K9HCS"

    uxid = UXID.decode input_string
    assert_kind_of ::UXID::Model, uxid

    assert_equal 1591129269141, uxid.time

  end


  # accepts the maximum allowed timestamp
  def test_accepts_the_maximum_allowed_timestamp
    input_string = "7ZZZZZZZZZZZZZZZZZZZZZZZZZ"

    uxid = UXID.decode input_string
    assert_kind_of ::UXID::Model, uxid

    assert_equal 281474976710655, uxid.time

  end


  # rejects malformed strings
  def test_rejects_malformed_strings
    input_string = "this is not a UXID"

    error = assert_raises { UXID.decode input_string }
    assert_equal "expected input to be a Base32 encoded string, got: 'this is not a UXID'", error.message

  end


end
