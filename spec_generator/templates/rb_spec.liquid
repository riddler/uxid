# AUTOGENERATED FILE - DO NOT EDIT

require "test_helper"

class UXID{{ group_id }}{{ spec_id }}Test < Minitest::Test
  # UXID Spec {{ group_id }}{{ spec_id }} - {{ group_name }} {{ spec_name }}
  # {{ description }}

{% if api_tests %}
{% for test in api_tests %}
{% capture args_string %}{% for arg in test.args %}"{{ arg }}"{% endfor %}{% endcapture %}
  # {{ test.name }}
  def test_{{ group_id }}{{ spec_id }}_{{ group_name }}_{{ spec_name }}_api
    result = UXID.{{ test.method }} {{ args_string }}
    refute_nil result
  end{% endfor %}
{% endif %}

{% if decoder_tests %}
{% for test in decoder_tests %}
  # {{ test.name }}
  def test_{{ group_id }}{{ spec_id }}_{{ group_name }}_{{ spec_name }}_decoder
    input_string = "{{ test.input }}"
{% if test.error_message %}
    error = assert_raises { UXID.decode input_string }
    assert_equal "{{ test.error_message }}", error.message
{% elsif test.verify %}
    uxid = UXID.decode input_string
    assert_kind_of ::UXID, uxid
{% if test.verify.encoded %}    assert_equal "{{ test.verify.encoded }}", uxid.encoded{% endif %}
{% if test.verify.time %}    assert_equal {{ test.verify.time }}, uxid.time{% endif %}
{% else %}
    uxid = UXID.decode input_string
    assert isinstance(uxid, UXID)
{% endif %}
  end

{% endfor %}{% endif %}
end
