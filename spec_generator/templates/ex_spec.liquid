# AUTOGENERATED FILE - DO NOT EDIT

defmodule UXID.Spec{{ group_id }}{{ spec_id }}Test do
  use ExUnit.Case, async: true
  @moduledoc """
  UXID Spec {{ group_id }}{{ spec_id }} - {{ group_name }} {{ spec_name }}

  {{ description }}
  """

  @moduletag specgroup: "{{ group_id }}"
  @moduletag spec: "{{ group_id }}{{ spec_id }}"

{% if api_tests %}
  describe "{{ group_name }} {{ spec_name }}: api" do
{% for test in api_tests %}
{% capture args_string %}{% for arg in test.args %}"{{ arg }}"{% endfor %}{% endcapture %}
    test "{{ test.name }}" do
      result = UXID.{{ test.method }}({{ args_string }})
      refute is_nil(result)
    end
{% endfor %}
  end{% endif %}
{% if decoder_tests %}
  describe "{{ group_name }} {{ spec_name }}: decoder" do
{% for test in decoder_tests %}
    test "{{ test.name }}" do
      input_string = "{{ test.input }}"
      result = UXID.Decoder.process(input_string)
{% if test.error_message %}
      assert {:error, message} = result
      assert "{{ test.error_message }}" == message
{% elsif test.verify %}
      assert {:ok, %UXID{} = uxid} = result
{% if test.verify.encoded %}      assert "{{ test.verify.encoded }}" == uxid.encoded{% endif %}
{% if test.verify.time_encoded %}      assert "{{ test.verify.time_encoded }}" == uxid.time_encoded{% endif %}
{% if test.verify.time %}      assert {{ test.verify.time }} == uxid.time{% endif %}
{% if test.verify.randomness_encoded %}      assert "{{ test.verify.randomness_encoded }}" == uxid.randomness_encoded{% endif %}
{% else %}
      assert {:ok, _uxid} = result{% endif %}
    end
{% endfor %}
  end{% endif %}
end
